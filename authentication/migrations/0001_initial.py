# Generated by Django 3.0.3 on 2022-11-16 10:31

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(max_length=256, unique=True, verbose_name='شماره موبایل')),
                ('otp', models.PositiveIntegerField(blank=True, null=True, verbose_name='کد ورود')),
                ('otp_create_time', models.DateTimeField(auto_now=True, verbose_name='تاریخ ایجاد کد')),
                ('is_legal', models.BooleanField(default=False, verbose_name='شخصیت حقوقی')),
                ('company', models.CharField(blank=True, max_length=256, null=True, verbose_name='نام شرکت')),
                ('address', models.CharField(blank=True, max_length=256, null=True, verbose_name='آدرس')),
                ('email_verification', models.BooleanField(default=False, verbose_name='تایید ایمیل')),
                ('referral_code', models.CharField(blank=True, max_length=256, null=True, verbose_name='کد معرف')),
                ('image', models.ImageField(default='userimg/default.png', upload_to='userimg', verbose_name='تصویر')),
                ('shaba_number', models.CharField(blank=True, max_length=120, null=True, verbose_name='شماره شبا')),
                ('card_number', models.CharField(blank=True, max_length=120, null=True, verbose_name='شماره کارت')),
                ('bank_account_number', models.CharField(blank=True, max_length=120, null=True, verbose_name='شماره حساب')),
                ('national_code', models.CharField(blank=True, max_length=256, null=True, verbose_name='کد ملی')),
                ('postal_code', models.CharField(blank=True, max_length=256, null=True, verbose_name='کد پستی')),
                ('telephone', models.CharField(blank=True, max_length=256, null=True, verbose_name='شماره تلفن ثابت')),
                ('warehouse_address', models.CharField(blank=True, max_length=256, null=True, verbose_name='آدرس محل انبار')),
                ('national_id', models.CharField(blank=True, max_length=256, null=True, verbose_name='شناسه ملی')),
                ('reg_number', models.CharField(blank=True, max_length=256, null=True, verbose_name='شماره ثبت')),
                ('economic_code', models.CharField(blank=True, max_length=256, null=True, verbose_name='کد اقتصادی')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
